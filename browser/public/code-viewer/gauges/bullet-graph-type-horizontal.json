{
 "sampleFiles":
[
 {
  "hasRelativeAssetsUrls": false,
  "path": "../samples/gauges/bullet-graph/type-horizontal/src/index.tsx",
  "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { IgrBulletGraph } from 'igniteui-react-gauges';\nimport { IgrLinearGraphRange } from 'igniteui-react-gauges';\nimport { IgrBulletGraphModule } from 'igniteui-react-gauges';\nimport { LinearScaleOrientation } from 'igniteui-react-gauges';\n\nIgrBulletGraphModule.register();\n\nexport default class BulletGraphTypeHorizontal extends React.Component {\n\n    constructor(props: any) {\n        super(props);\n\n        this.onCreateGaugeGreen = this.onCreateGaugeGreen.bind(this);\n        this.onCreateGaugeOrange = this.onCreateGaugeOrange.bind(this);\n        this.onCreateGaugeRed = this.onCreateGaugeRed.bind(this);\n    }\n\n    public onCreateGaugeGreen(component: IgrBulletGraph) {\n        this.renderGauge(component, 90, 80, [\"#008000\", \"#10b401\", \"#45ec03\", \"#97f397\"]);\n    }\n    public onCreateGaugeOrange(component: IgrBulletGraph) {\n        this.renderGauge(component, 70, 80, [\"#e29b03\", \"#fdb417\", \"#fdc957\", \"#f7d58b\"]);\n    }\n    public onCreateGaugeRed(component: IgrBulletGraph) {\n        this.renderGauge(component, 40, 80, [\"#cf0000\", \"#ff0000\", \"#fd3939\", \"#f88989\"]);\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div className=\"container sample\"  >\n                <IgrBulletGraph\n                    ref={this.onCreateGaugeGreen}\n                    height=\"120px\"\n                    width=\"100%\"  />\n                <IgrBulletGraph\n                    ref={this.onCreateGaugeOrange}\n                    height=\"120px\"\n                    width=\"100%\" />\n                <IgrBulletGraph\n                    ref={this.onCreateGaugeRed}\n                    height=\"120px\"\n                    width=\"100%\"  />\n            </div>\n        );\n    }\n\n    public renderGauge(gauge: IgrBulletGraph, value: number, target: number, colors: string[]) {\n\n        if (!gauge) { return; }\n\n        gauge.orientation = LinearScaleOrientation.Horizontal;\n        gauge.backingBrush = \"transparent\";\n        gauge.backingOutline = \"transparent\";\n        gauge.transitionDuration = 500;\n        gauge.minorTickCount = 4;\n        gauge.value = value;\n        gauge.targetValue = target;\n        gauge.minimumValue = 0;\n        gauge.maximumValue = 100;\n        gauge.interval = (gauge.maximumValue - gauge.minimumValue) / 20;\n        gauge.labelInterval = gauge.interval;\n        gauge.labelExtent = 0.0;\n\n        gauge.rangeBrushes = colors;\n        gauge.rangeOutlines = colors;\n        const rangeSpan = gauge.maximumValue - gauge.minimumValue;\n        const rangeValueInterval = rangeSpan / colors.length;\n\n        for (let i = 0; i < colors.length; i++) {\n            const color = colors[i];\n            const range = new IgrLinearGraphRange({});\n            range.startValue = rangeValueInterval * i;\n            range.endValue   = rangeValueInterval * (i + 1);\n            range.brush = color;\n            range.outline = color;\n            range.innerStartExtent  = 0.2;\n            range.innerEndExtent    = 0.2;\n            range.outerStartExtent  = 0.95;\n            range.outerEndExtent    = 0.95;\n            gauge.ranges.add(range);\n        }\n    }\n\n}\n\n// rendering above class to the React DOM\nReactDOM.render(<BulletGraphTypeHorizontal />, document.getElementById('root'));\n",
  "isMain": true,
  "fileExtension": "tsx",
  "fileHeader": "tsx"
 },
 {
  "hasRelativeAssetsUrls": false,
  "path": "../samples/gauges/bullet-graph/type-horizontal/src/index.css",
  "content": "",
  "isMain": true,
  "fileExtension": "css",
  "fileHeader": "css"
 }
]
}